

block = "{" ws STATEMENT*:stmts ws "}" {Block(:stmts)};

STATEMENT = STATEMENT_BODY;
STATEMENT_BODY = (var_assign | var_decl);

var_assign = identifier:id ":=" EXPR:e ";" {VarAssign(:id, :e)} ; // TODO move ";"
var_decl = ws "VAR" identifier:id ":" ws type:t ws ";" {VarDecl(:id, :t)} ; 

EXPR = sum | mul | sub | div | mod | int | identifier;
sum = ws "(" EXPR:l "+" EXPR:r ")" ws {ArSum(:l, :r)};
mul = ws "(" EXPR:l "*" EXPR:r ")" ws {ArMult(:l, :r)};
sub = ws "(" EXPR:l "-" EXPR:r ")" ws {ArSub(:l, :r)};
div = ws "(" EXPR:l "/" EXPR:r ")" ws {ArDiv(:l, :r)};
mod = ws "(" EXPR:l "%" EXPR:r ")" ws {ArMod(:l, :r)};
int = ws digit+ $s ws { ArInt(s2i($s))};


identifier = ws (letter symbol*) $s ws {Identifier($s)};
type = "INT"$t {Type($t)} | "ARRAY OF INT"$t {Type($t)};

symbol = letter | digit | "_";
letter = letterLower | letterUpper;

digit = '0'-'9';
letterLower = 'a'-'z';
letterUpper = 'A'-'Z';

ws = (' ' | '\t' | '\n' | '\r')*;

